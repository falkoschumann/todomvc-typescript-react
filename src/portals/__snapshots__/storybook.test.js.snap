// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Example/Button Large 1`] = `
<button
  className="storybook-button storybook-button--large storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Primary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--primary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Secondary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Small 1`] = `
<button
  className="storybook-button storybook-button--small storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log in
      </button>
      <button
        className="storybook-button storybook-button--small storybook-button--primary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log out
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log in
        </button>
        <button
          className="storybook-button storybook-button--small storybook-button--primary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Info Footer Default 1`] = `
<footer
  className="info"
>
  <p>
    Double-click to edit a todo
  </p>
  <p>
    Created by 
    <a
      href="https://github.com/falkoschumann/todomvc-typescript-react"
    >
      Falko Schumann
    </a>
  </p>
</footer>
`;

exports[`Storyshots Todo Controller Active Filter 1`] = `
<section
  className="todoapp"
>
  <header
    className="header"
  >
    <h1>
      todos
    </h1>
    <input
      autoFocus={true}
      className="new-todo"
      onKeyDown={[Function]}
      placeholder="What needs to be done?"
    />
  </header>
  <section
    className="main"
  >
    <input
      className="toggle-all"
      id="toggle-all"
      type="checkbox"
    />
    <label
      htmlFor="toggle-all"
    >
      Mark all as complete
    </label>
    <ul
      className="todo-list"
    >
      <li
        className=""
      >
        <div
          className="view"
        >
          <input
            checked={false}
            className="toggle"
            onChange={[Function]}
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Buy a unicorn
          </label>
          <button
            className="destroy"
            onClick={[Function]}
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Buy a unicorn"
        />
      </li>
    </ul>
  </section>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        1
      </strong>
       item
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          className="selected"
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
    <button
      className="clear-completed"
    >
      Clear completed
    </button>
  </footer>
</section>
`;

exports[`Storyshots Todo Controller Completed Filter 1`] = `
<section
  className="todoapp"
>
  <header
    className="header"
  >
    <h1>
      todos
    </h1>
    <input
      autoFocus={true}
      className="new-todo"
      onKeyDown={[Function]}
      placeholder="What needs to be done?"
    />
  </header>
  <section
    className="main"
  >
    <input
      className="toggle-all"
      id="toggle-all"
      type="checkbox"
    />
    <label
      htmlFor="toggle-all"
    >
      Mark all as complete
    </label>
    <ul
      className="todo-list"
    >
      <li
        className="completed"
      >
        <div
          className="view"
        >
          <input
            checked={true}
            className="toggle"
            onChange={[Function]}
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Taste JavaScript
          </label>
          <button
            className="destroy"
            onClick={[Function]}
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Taste JavaScript"
        />
      </li>
    </ul>
  </section>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        1
      </strong>
       item
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          className="selected"
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
    <button
      className="clear-completed"
    >
      Clear completed
    </button>
  </footer>
</section>
`;

exports[`Storyshots Todo Controller Default 1`] = `
<section
  className="todoapp"
>
  <header
    className="header"
  >
    <h1>
      todos
    </h1>
    <input
      autoFocus={true}
      className="new-todo"
      onKeyDown={[Function]}
      placeholder="What needs to be done?"
    />
  </header>
  <section
    className="main"
  >
    <input
      className="toggle-all"
      id="toggle-all"
      type="checkbox"
    />
    <label
      htmlFor="toggle-all"
    >
      Mark all as complete
    </label>
    <ul
      className="todo-list"
    >
      <li
        className="completed"
      >
        <div
          className="view"
        >
          <input
            checked={true}
            className="toggle"
            onChange={[Function]}
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Taste JavaScript
          </label>
          <button
            className="destroy"
            onClick={[Function]}
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Taste JavaScript"
        />
      </li>
      <li
        className=""
      >
        <div
          className="view"
        >
          <input
            checked={false}
            className="toggle"
            onChange={[Function]}
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Buy a unicorn
          </label>
          <button
            className="destroy"
            onClick={[Function]}
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Buy a unicorn"
        />
      </li>
    </ul>
  </section>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        1
      </strong>
       item
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          className="selected"
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
    <button
      className="clear-completed"
    >
      Clear completed
    </button>
  </footer>
</section>
`;

exports[`Storyshots Todo Item Completed 1`] = `
<section
  className="todoapp"
>
  <section
    className="main"
  >
    <ul
      className="todo-list"
    >
      <li
        className="completed"
      >
        <div
          className="view"
        >
          <input
            checked={true}
            className="toggle"
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Taste JavaScript
          </label>
          <button
            className="destroy"
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Taste JavaScript"
        />
      </li>
    </ul>
  </section>
</section>
`;

exports[`Storyshots Todo Item Default 1`] = `
<section
  className="todoapp"
>
  <section
    className="main"
  >
    <ul
      className="todo-list"
    >
      <li
        className=""
      >
        <div
          className="view"
        >
          <input
            checked={false}
            className="toggle"
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Taste JavaScript
          </label>
          <button
            className="destroy"
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Taste JavaScript"
        />
      </li>
    </ul>
  </section>
</section>
`;

exports[`Storyshots Todo Item Editing 1`] = `
<section
  className="todoapp"
>
  <section
    className="main"
  >
    <ul
      className="todo-list"
    >
      <li
        className="editing"
      >
        <div
          className="view"
        >
          <input
            checked={false}
            className="toggle"
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Taste JavaScript
          </label>
          <button
            className="destroy"
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Taste JavaScript"
        />
      </li>
    </ul>
  </section>
</section>
`;

exports[`Storyshots Todo List Default 1`] = `
<section
  className="todoapp"
>
  <section
    className="main"
  >
    <input
      className="toggle-all"
      id="toggle-all"
      type="checkbox"
    />
    <label
      htmlFor="toggle-all"
    >
      Mark all as complete
    </label>
    <ul
      className="todo-list"
    >
      <li
        className="completed"
      >
        <div
          className="view"
        >
          <input
            checked={true}
            className="toggle"
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Taste JavaScript
          </label>
          <button
            className="destroy"
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Taste JavaScript"
        />
      </li>
      <li
        className=""
      >
        <div
          className="view"
        >
          <input
            checked={false}
            className="toggle"
            title="Toggle"
            type="checkbox"
          />
          <label
            onDoubleClick={[Function]}
          >
            Buy a unicorn
          </label>
          <button
            className="destroy"
            title="Destroy"
          />
        </div>
        <input
          className="edit"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          value="Buy a unicorn"
        />
      </li>
    </ul>
  </section>
</section>
`;

exports[`Storyshots Todo List Footer 0 Items left 1`] = `
<section
  className="todoapp"
>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        0
      </strong>
       item
      s
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          className="selected"
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
    <button
      className="clear-completed"
    >
      Clear completed
    </button>
  </footer>
</section>
`;

exports[`Storyshots Todo List Footer 1 Item left 1`] = `
<section
  className="todoapp"
>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        1
      </strong>
       item
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          className="selected"
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
  </footer>
</section>
`;

exports[`Storyshots Todo List Footer Has completed Items 1`] = `
<section
  className="todoapp"
>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        0
      </strong>
       item
      s
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          className="selected"
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
    <button
      className="clear-completed"
    >
      Clear completed
    </button>
  </footer>
</section>
`;

exports[`Storyshots Todo List Footer Hidden by Default 1`] = `
<section
  className="todoapp"
/>
`;

exports[`Storyshots Todo List Footer Multiple Items left 1`] = `
<section
  className="todoapp"
>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        3
      </strong>
       item
      s
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          className="selected"
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
  </footer>
</section>
`;

exports[`Storyshots Todo List Footer Show active Items 1`] = `
<section
  className="todoapp"
>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        1
      </strong>
       item
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          className="selected"
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
  </footer>
</section>
`;

exports[`Storyshots Todo List Footer Show completed Items 1`] = `
<section
  className="todoapp"
>
  <footer
    className="footer"
  >
    <span
      className="todo-count"
    >
      <strong>
        1
      </strong>
       item
       left
    </span>
    <ul
      className="filters"
    >
      <li>
        <a
          href="#/"
        >
          All
        </a>
      </li>
      <li>
        <a
          href="#/active"
        >
          Active
        </a>
      </li>
      <li>
        <a
          className="selected"
          href="#/completed"
        >
          Completed
        </a>
      </li>
    </ul>
  </footer>
</section>
`;

exports[`Storyshots Todo List Header Default 1`] = `
<section
  className="todoapp"
>
  <header
    className="header"
  >
    <h1>
      todos
    </h1>
    <input
      autoFocus={true}
      className="new-todo"
      onKeyDown={[Function]}
      placeholder="What needs to be done?"
    />
  </header>
</section>
`;
